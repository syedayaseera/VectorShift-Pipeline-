{"ast":null,"code":"var _jsxFileName = \"/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/filterNode.js\",\n  _s = $RefreshSig$();\n// filterNode.js - Data filtering node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [filterType, setFilterType] = useState((data === null || data === void 0 ? void 0 : data.filterType) || 'contains');\n  const [filterValue, setFilterValue] = useState((data === null || data === void 0 ? void 0 : data.filterValue) || '');\n  const [caseSensitive, setCaseSensitive] = useState((data === null || data === void 0 ? void 0 : data.caseSensitive) || false);\n  const handles = [createHandle('target', Position.Left, `${id}-input`), createHandle('source', Position.Right, `${id}-filtered`), createHandle('source', Position.Right, `${id}-rejected`, {\n    top: '70%'\n  })];\n  const filterOptions = [{\n    value: 'contains',\n    label: 'Contains'\n  }, {\n    value: 'startsWith',\n    label: 'Starts With'\n  }, {\n    value: 'endsWith',\n    label: 'Ends With'\n  }, {\n    value: 'equals',\n    label: 'Equals'\n  }, {\n    value: 'regex',\n    label: 'Regex'\n  }];\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: data,\n    title: \"Filter\",\n    handles: handles,\n    style: {\n      backgroundColor: '#f0f8e8'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Filter Type\",\n      value: filterType,\n      onChange: e => setFilterType(e.target.value),\n      options: filterOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Filter Value\",\n      value: filterValue,\n      onChange: e => setFilterValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: caseSensitive,\n        onChange: e => setCaseSensitive(e.target.checked),\n        style: {\n          marginRight: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"Case Sensitive\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterNode, \"u2Q+cqPwiGjAKQA6Av33mRYgkco=\");\n_c = FilterNode;\nvar _c;\n$RefreshReg$(_c, \"FilterNode\");","map":{"version":3,"names":["useState","Position","BaseNode","createHandle","InputField","jsxDEV","_jsxDEV","FilterNode","id","data","_s","filterType","setFilterType","filterValue","setFilterValue","caseSensitive","setCaseSensitive","handles","Left","Right","top","filterOptions","value","label","title","style","backgroundColor","children","onChange","e","target","options","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","marginTop","type","checked","marginRight","_c","$RefreshReg$"],"sources":["/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/filterNode.js"],"sourcesContent":["// filterNode.js - Data filtering node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\n\nexport const FilterNode = ({ id, data }) => {\n  const [filterType, setFilterType] = useState(data?.filterType || 'contains');\n  const [filterValue, setFilterValue] = useState(data?.filterValue || '');\n  const [caseSensitive, setCaseSensitive] = useState(data?.caseSensitive || false);\n\n  const handles = [\n    createHandle('target', Position.Left, `${id}-input`),\n    createHandle('source', Position.Right, `${id}-filtered`),\n    createHandle('source', Position.Right, `${id}-rejected`, { top: '70%' })\n  ];\n\n  const filterOptions = [\n    { value: 'contains', label: 'Contains' },\n    { value: 'startsWith', label: 'Starts With' },\n    { value: 'endsWith', label: 'Ends With' },\n    { value: 'equals', label: 'Equals' },\n    { value: 'regex', label: 'Regex' }\n  ];\n\n  return (\n    <BaseNode \n      id={id} \n      data={data} \n      title=\"Filter\" \n      handles={handles}\n      style={{ backgroundColor: '#f0f8e8' }}\n    >\n      <InputField \n        label=\"Filter Type\" \n        value={filterType} \n        onChange={(e) => setFilterType(e.target.value)} \n        options={filterOptions}\n      />\n      <InputField \n        label=\"Filter Value\" \n        value={filterValue} \n        onChange={(e) => setFilterValue(e.target.value)} \n      />\n      <label style={{ display: 'flex', alignItems: 'center', marginTop: '4px' }}>\n        <input \n          type=\"checkbox\" \n          checked={caseSensitive} \n          onChange={(e) => setCaseSensitive(e.target.checked)}\n          style={{ marginRight: '4px' }}\n        />\n        Case Sensitive\n      </label>\n    </BaseNode>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}