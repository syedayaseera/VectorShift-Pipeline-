{"ast":null,"code":"var _jsxFileName = \"/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/calculatorNode.js\",\n  _s = $RefreshSig$();\n// calculatorNode.js - Mathematical operations node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalculatorNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [operation, setOperation] = useState((data === null || data === void 0 ? void 0 : data.operation) || 'add');\n  const [value, setValue] = useState((data === null || data === void 0 ? void 0 : data.value) || '0');\n  const handles = [createHandle('target', Position.Left, `${id}-input`), createHandle('source', Position.Right, `${id}-result`)];\n  const operationOptions = [{\n    value: 'add',\n    label: 'Add'\n  }, {\n    value: 'subtract',\n    label: 'Subtract'\n  }, {\n    value: 'multiply',\n    label: 'Multiply'\n  }, {\n    value: 'divide',\n    label: 'Divide'\n  }, {\n    value: 'power',\n    label: 'Power'\n  }];\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: data,\n    title: \"Calculator\",\n    handles: handles,\n    style: {\n      backgroundColor: '#e8f4fd'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Operation\",\n      value: operation,\n      onChange: e => setOperation(e.target.value),\n      options: operationOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Value\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculatorNode, \"CofnZZgTwA3jH1hlJ9qmebDnOOk=\");\n_c = CalculatorNode;\nvar _c;\n$RefreshReg$(_c, \"CalculatorNode\");","map":{"version":3,"names":["useState","Position","BaseNode","createHandle","InputField","jsxDEV","_jsxDEV","CalculatorNode","id","data","_s","operation","setOperation","value","setValue","handles","Left","Right","operationOptions","label","title","style","backgroundColor","children","onChange","e","target","options","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/calculatorNode.js"],"sourcesContent":["// calculatorNode.js - Mathematical operations node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\n\nexport const CalculatorNode = ({ id, data }) => {\n  const [operation, setOperation] = useState(data?.operation || 'add');\n  const [value, setValue] = useState(data?.value || '0');\n\n  const handles = [\n    createHandle('target', Position.Left, `${id}-input`),\n    createHandle('source', Position.Right, `${id}-result`)\n  ];\n\n  const operationOptions = [\n    { value: 'add', label: 'Add' },\n    { value: 'subtract', label: 'Subtract' },\n    { value: 'multiply', label: 'Multiply' },\n    { value: 'divide', label: 'Divide' },\n    { value: 'power', label: 'Power' }\n  ];\n\n  return (\n    <BaseNode \n      id={id} \n      data={data} \n      title=\"Calculator\" \n      handles={handles}\n      style={{ backgroundColor: '#e8f4fd' }}\n    >\n      <InputField \n        label=\"Operation\" \n        value={operation} \n        onChange={(e) => setOperation(e.target.value)} \n        options={operationOptions}\n      />\n      <InputField \n        label=\"Value\" \n        value={value} \n        onChange={(e) => setValue(e.target.value)} \n        type=\"number\"\n      />\n    </BaseNode>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAAS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,SAAS,KAAI,KAAK,CAAC;EACpE,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAAS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,KAAK,KAAI,GAAG,CAAC;EAEtD,MAAME,OAAO,GAAG,CACdZ,YAAY,CAAC,QAAQ,EAAEF,QAAQ,CAACe,IAAI,EAAG,GAAER,EAAG,QAAO,CAAC,EACpDL,YAAY,CAAC,QAAQ,EAAEF,QAAQ,CAACgB,KAAK,EAAG,GAAET,EAAG,SAAQ,CAAC,CACvD;EAED,MAAMU,gBAAgB,GAAG,CACvB;IAAEL,KAAK,EAAE,KAAK;IAAEM,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAEN,KAAK,EAAE,UAAU;IAAEM,KAAK,EAAE;EAAW,CAAC,EACxC;IAAEN,KAAK,EAAE,UAAU;IAAEM,KAAK,EAAE;EAAW,CAAC,EACxC;IAAEN,KAAK,EAAE,QAAQ;IAAEM,KAAK,EAAE;EAAS,CAAC,EACpC;IAAEN,KAAK,EAAE,OAAO;IAAEM,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,oBACEb,OAAA,CAACJ,QAAQ;IACPM,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAEA,IAAK;IACXW,KAAK,EAAC,YAAY;IAClBL,OAAO,EAAEA,OAAQ;IACjBM,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBAEtCjB,OAAA,CAACF,UAAU;MACTe,KAAK,EAAC,WAAW;MACjBN,KAAK,EAAEF,SAAU;MACjBa,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;MAC9Cc,OAAO,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFzB,OAAA,CAACF,UAAU;MACTe,KAAK,EAAC,OAAO;MACbN,KAAK,EAAEA,KAAM;MACbW,QAAQ,EAAGC,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;MAC1CmB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf,CAAC;AAAArB,EAAA,CAvCYH,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}