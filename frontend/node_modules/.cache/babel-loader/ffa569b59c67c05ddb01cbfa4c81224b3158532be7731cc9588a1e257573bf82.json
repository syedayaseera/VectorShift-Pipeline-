{"ast":null,"code":"var _jsxFileName = \"/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/ui.js\",\n  _s = $RefreshSig$();\n// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { CalculatorNode } from './nodes/calculatorNode';\nimport { FilterNode } from './nodes/filterNode';\nimport { TransformerNode } from './nodes/transformerNode';\nimport { ConditionNode } from './nodes/conditionNode';\nimport { AggregatorNode } from './nodes/aggregatorNode';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\nconst proOptions = {\n  hideAttribution: true\n};\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n  calculator: CalculatorNode,\n  filter: FilterNode,\n  transformer: TransformerNode,\n  condition: ConditionNode,\n  aggregator: AggregatorNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect\n});\nexport const PipelineUI = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n    return nodeData;\n  };\n  const onDrop = useCallback(event => {\n    var _event$dataTransfer;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    if (event !== null && event !== void 0 && (_event$dataTransfer = event.dataTransfer) !== null && _event$dataTransfer !== void 0 && _event$dataTransfer.getData('application/reactflow')) {\n      const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n      const type = appData === null || appData === void 0 ? void 0 : appData.nodeType;\n\n      // check if the dropped element is valid\n      if (typeof type === 'undefined' || !type) {\n        return;\n      }\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(type);\n      const newNode = {\n        id: nodeID,\n        type,\n        position,\n        data: getInitNodeData(nodeID, type)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        height: '70vh',\n        background: 'linear-gradient(135deg, var(--gray-50) 0%, var(--primary-50) 100%)',\n        border: '1px solid var(--gray-200)',\n        borderRadius: 'var(--radius-lg)',\n        margin: 'var(--space-4)',\n        boxShadow: 'var(--shadow-lg)',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onInit: setReactFlowInstance,\n        nodeTypes: nodeTypes,\n        proOptions: proOptions,\n        snapGrid: [gridSize, gridSize],\n        connectionLineType: \"smoothstep\",\n        fitView: true,\n        fitViewOptions: {\n          padding: 0.1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          color: \"var(--gray-300)\",\n          gap: gridSize,\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {\n          style: {\n            background: 'white',\n            border: '1px solid var(--gray-200)',\n            borderRadius: 'var(--radius-lg)',\n            boxShadow: 'var(--shadow-lg)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n          style: {\n            background: 'white',\n            border: '1px solid var(--gray-200)',\n            borderRadius: 'var(--radius-lg)',\n            boxShadow: 'var(--shadow-lg)'\n          },\n          nodeColor: node => {\n            const colors = {\n              customInput: 'var(--success-500)',\n              llm: 'var(--primary-500)',\n              customOutput: 'var(--warning-500)',\n              text: 'var(--gray-500)',\n              calculator: '#8b5cf6',\n              filter: '#06b6d4',\n              transformer: '#f59e0b',\n              condition: '#ec4899',\n              aggregator: '#10b981'\n            };\n            return colors[node.type] || 'var(--gray-500)';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(PipelineUI, \"myjMk+2wrQgkx/oldHDmkiO3iMs=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","CalculatorNode","FilterNode","TransformerNode","ConditionNode","AggregatorNode","jsxDEV","_jsxDEV","Fragment","_Fragment","gridSize","proOptions","hideAttribution","nodeTypes","customInput","llm","customOutput","text","calculator","filter","transformer","condition","aggregator","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","PipelineUI","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","nodeData","id","nodeType","onDrop","event","_event$dataTransfer","preventDefault","reactFlowBounds","current","getBoundingClientRect","dataTransfer","getData","appData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","onDragOver","dropEffect","children","ref","style","height","background","border","borderRadius","margin","boxShadow","overflow","onInit","snapGrid","connectionLineType","fitView","fitViewOptions","padding","color","gap","variant","fileName","_jsxFileName","lineNumber","columnNumber","nodeColor","node","colors","_c","$RefreshReg$"],"sources":["/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/ui.js"],"sourcesContent":["// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { CalculatorNode } from './nodes/calculatorNode';\nimport { FilterNode } from './nodes/filterNode';\nimport { TransformerNode } from './nodes/transformerNode';\nimport { ConditionNode } from './nodes/conditionNode';\nimport { AggregatorNode } from './nodes/aggregatorNode';\n\nimport 'reactflow/dist/style.css';\n\nconst gridSize = 20;\nconst proOptions = { hideAttribution: true };\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n  calculator: CalculatorNode,\n  filter: FilterNode,\n  transformer: TransformerNode,\n  condition: ConditionNode,\n  aggregator: AggregatorNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = () => {\n    const reactFlowWrapper = useRef(null);\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\n    const {\n      nodes,\n      edges,\n      getNodeID,\n      addNode,\n      onNodesChange,\n      onEdgesChange,\n      onConnect\n    } = useStore(selector, shallow);\n\n    const getInitNodeData = (nodeID, type) => {\n      let nodeData = { id: nodeID, nodeType: `${type}` };\n      return nodeData;\n    }\n\n    const onDrop = useCallback(\n        (event) => {\n          event.preventDefault();\n    \n          const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n          if (event?.dataTransfer?.getData('application/reactflow')) {\n            const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n            const type = appData?.nodeType;\n      \n            // check if the dropped element is valid\n            if (typeof type === 'undefined' || !type) {\n              return;\n            }\n      \n            const position = reactFlowInstance.project({\n              x: event.clientX - reactFlowBounds.left,\n              y: event.clientY - reactFlowBounds.top,\n            });\n\n            const nodeID = getNodeID(type);\n            const newNode = {\n              id: nodeID,\n              type,\n              position,\n              data: getInitNodeData(nodeID, type),\n            };\n      \n            addNode(newNode);\n          }\n        },\n        [reactFlowInstance]\n    );\n\n    const onDragOver = useCallback((event) => {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'move';\n    }, []);\n\n    return (\n        <>\n        <div \n            ref={reactFlowWrapper} \n            style={{\n                height: '70vh',\n                background: 'linear-gradient(135deg, var(--gray-50) 0%, var(--primary-50) 100%)',\n                border: '1px solid var(--gray-200)',\n                borderRadius: 'var(--radius-lg)',\n                margin: 'var(--space-4)',\n                boxShadow: 'var(--shadow-lg)',\n                overflow: 'hidden'\n            }}\n        >\n            <ReactFlow\n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onDrop={onDrop}\n                onDragOver={onDragOver}\n                onInit={setReactFlowInstance}\n                nodeTypes={nodeTypes}\n                proOptions={proOptions}\n                snapGrid={[gridSize, gridSize]}\n                connectionLineType='smoothstep'\n                fitView\n                fitViewOptions={{ padding: 0.1 }}\n            >\n                <Background \n                    color=\"var(--gray-300)\" \n                    gap={gridSize} \n                    variant=\"dots\"\n                />\n                <Controls \n                    style={{\n                        background: 'white',\n                        border: '1px solid var(--gray-200)',\n                        borderRadius: 'var(--radius-lg)',\n                        boxShadow: 'var(--shadow-lg)'\n                    }}\n                />\n                <MiniMap \n                    style={{\n                        background: 'white',\n                        border: '1px solid var(--gray-200)',\n                        borderRadius: 'var(--radius-lg)',\n                        boxShadow: 'var(--shadow-lg)'\n                    }}\n                    nodeColor={(node) => {\n                        const colors = {\n                            customInput: 'var(--success-500)',\n                            llm: 'var(--primary-500)',\n                            customOutput: 'var(--warning-500)',\n                            text: 'var(--gray-500)',\n                            calculator: '#8b5cf6',\n                            filter: '#06b6d4',\n                            transformer: '#f59e0b',\n                            condition: '#ec4899',\n                            aggregator: '#10b981'\n                        };\n                        return colors[node.type] || 'var(--gray-500)';\n                    }}\n                />\n            </ReactFlow>\n        </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}