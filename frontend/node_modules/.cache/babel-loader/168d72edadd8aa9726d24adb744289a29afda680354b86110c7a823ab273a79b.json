{"ast":null,"code":"var _jsxFileName = \"/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/aggregatorNode.js\",\n  _s = $RefreshSig$();\n// aggregatorNode.js - Data aggregation node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AggregatorNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [aggregationType, setAggregationType] = useState((data === null || data === void 0 ? void 0 : data.aggregationType) || 'sum');\n  const [groupBy, setGroupBy] = useState((data === null || data === void 0 ? void 0 : data.groupBy) || '');\n  const [windowSize, setWindowSize] = useState((data === null || data === void 0 ? void 0 : data.windowSize) || '10');\n  const handles = [createHandle('target', Position.Left, `${id}-input`), createHandle('source', Position.Right, `${id}-aggregated`)];\n  const aggregationOptions = [{\n    value: 'sum',\n    label: 'Sum'\n  }, {\n    value: 'average',\n    label: 'Average'\n  }, {\n    value: 'count',\n    label: 'Count'\n  }, {\n    value: 'min',\n    label: 'Minimum'\n  }, {\n    value: 'max',\n    label: 'Maximum'\n  }, {\n    value: 'median',\n    label: 'Median'\n  }, {\n    value: 'mode',\n    label: 'Mode'\n  }];\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: data,\n    title: \"Aggregator\",\n    handles: handles,\n    style: {\n      backgroundColor: '#e8f0f8'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Aggregation Type\",\n      value: aggregationType,\n      onChange: e => setAggregationType(e.target.value),\n      options: aggregationOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Group By\",\n      value: groupBy,\n      onChange: e => setGroupBy(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Window Size\",\n      value: windowSize,\n      onChange: e => setWindowSize(e.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AggregatorNode, \"IsqUB5svjbcKToGA73lqjVCnexU=\");\n_c = AggregatorNode;\nvar _c;\n$RefreshReg$(_c, \"AggregatorNode\");","map":{"version":3,"names":["useState","Position","BaseNode","createHandle","InputField","jsxDEV","_jsxDEV","AggregatorNode","id","data","_s","aggregationType","setAggregationType","groupBy","setGroupBy","windowSize","setWindowSize","handles","Left","Right","aggregationOptions","value","label","title","style","backgroundColor","children","onChange","e","target","options","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/syeda/Desktop/untitled folder/VectorShift-Pipeline-/frontend/src/nodes/aggregatorNode.js"],"sourcesContent":["// aggregatorNode.js - Data aggregation node\n\nimport { useState } from 'react';\nimport { Position } from 'reactflow';\nimport { BaseNode, createHandle, InputField } from './BaseNode';\n\nexport const AggregatorNode = ({ id, data }) => {\n  const [aggregationType, setAggregationType] = useState(data?.aggregationType || 'sum');\n  const [groupBy, setGroupBy] = useState(data?.groupBy || '');\n  const [windowSize, setWindowSize] = useState(data?.windowSize || '10');\n\n  const handles = [\n    createHandle('target', Position.Left, `${id}-input`),\n    createHandle('source', Position.Right, `${id}-aggregated`)\n  ];\n\n  const aggregationOptions = [\n    { value: 'sum', label: 'Sum' },\n    { value: 'average', label: 'Average' },\n    { value: 'count', label: 'Count' },\n    { value: 'min', label: 'Minimum' },\n    { value: 'max', label: 'Maximum' },\n    { value: 'median', label: 'Median' },\n    { value: 'mode', label: 'Mode' }\n  ];\n\n  return (\n    <BaseNode \n      id={id} \n      data={data} \n      title=\"Aggregator\" \n      handles={handles}\n      style={{ backgroundColor: '#e8f0f8' }}\n    >\n      <InputField \n        label=\"Aggregation Type\" \n        value={aggregationType} \n        onChange={(e) => setAggregationType(e.target.value)} \n        options={aggregationOptions}\n      />\n      <InputField \n        label=\"Group By\" \n        value={groupBy} \n        onChange={(e) => setGroupBy(e.target.value)} \n      />\n      <InputField \n        label=\"Window Size\" \n        value={windowSize} \n        onChange={(e) => setWindowSize(e.target.value)} \n        type=\"number\"\n      />\n    </BaseNode>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}